#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyKhachSan")]
	public partial class QLKSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDatPhong_CT(DatPhong_CT instance);
    partial void UpdateDatPhong_CT(DatPhong_CT instance);
    partial void DeleteDatPhong_CT(DatPhong_CT instance);
    partial void InsertPhong(Phong instance);
    partial void UpdatePhong(Phong instance);
    partial void DeletePhong(Phong instance);
    partial void InsertLoaiPhong(LoaiPhong instance);
    partial void UpdateLoaiPhong(LoaiPhong instance);
    partial void DeleteLoaiPhong(LoaiPhong instance);
    partial void InsertPhong_TB(Phong_TB instance);
    partial void UpdatePhong_TB(Phong_TB instance);
    partial void DeletePhong_TB(Phong_TB instance);
    partial void InsertThietBi(ThietBi instance);
    partial void UpdateThietBi(ThietBi instance);
    partial void DeleteThietBi(ThietBi instance);
    partial void InsertTang(Tang instance);
    partial void UpdateTang(Tang instance);
    partial void DeleteTang(Tang instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertRight(Right instance);
    partial void UpdateRight(Right instance);
    partial void DeleteRight(Right instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertFunc(Func instance);
    partial void UpdateFunc(Func instance);
    partial void DeleteFunc(Func instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertDatPhong(DatPhong instance);
    partial void UpdateDatPhong(DatPhong instance);
    partial void DeleteDatPhong(DatPhong instance);
    partial void InsertDatPhong_SP(DatPhong_SP instance);
    partial void UpdateDatPhong_SP(DatPhong_SP instance);
    partial void DeleteDatPhong_SP(DatPhong_SP instance);
    #endregion
		
		public QLKSDataContext() : 
				base(global::DAL.Properties.Settings.Default.QuanLyKhachSanConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLKSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLKSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DatPhong_CT> DatPhong_CTs
		{
			get
			{
				return this.GetTable<DatPhong_CT>();
			}
		}
		
		public System.Data.Linq.Table<Phong> Phongs
		{
			get
			{
				return this.GetTable<Phong>();
			}
		}
		
		public System.Data.Linq.Table<LoaiPhong> LoaiPhongs
		{
			get
			{
				return this.GetTable<LoaiPhong>();
			}
		}
		
		public System.Data.Linq.Table<Phong_TB> Phong_TBs
		{
			get
			{
				return this.GetTable<Phong_TB>();
			}
		}
		
		public System.Data.Linq.Table<ThietBi> ThietBis
		{
			get
			{
				return this.GetTable<ThietBi>();
			}
		}
		
		public System.Data.Linq.Table<Tang> Tangs
		{
			get
			{
				return this.GetTable<Tang>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Right> Rights
		{
			get
			{
				return this.GetTable<Right>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<Func> Funcs
		{
			get
			{
				return this.GetTable<Func>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<DatPhong> DatPhongs
		{
			get
			{
				return this.GetTable<DatPhong>();
			}
		}
		
		public System.Data.Linq.Table<DatPhong_SP> DatPhong_SPs
		{
			get
			{
				return this.GetTable<DatPhong_SP>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatPhong_CT")]
	public partial class DatPhong_CT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDPCT;
		
		private System.Nullable<int> _idDP;
		
		private System.Nullable<int> _idPhong;
		
		private System.Nullable<int> _soNgayO;
		
		private System.Nullable<decimal> _donGia;
		
		private System.Nullable<decimal> _thanhTien;
		
		private System.Nullable<System.DateTime> _ngay;
		
		private EntityRef<Phong> _Phong;
		
		private EntityRef<DatPhong> _DatPhong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDPCTChanging(int value);
    partial void OnidDPCTChanged();
    partial void OnidDPChanging(System.Nullable<int> value);
    partial void OnidDPChanged();
    partial void OnidPhongChanging(System.Nullable<int> value);
    partial void OnidPhongChanged();
    partial void OnsoNgayOChanging(System.Nullable<int> value);
    partial void OnsoNgayOChanged();
    partial void OndonGiaChanging(System.Nullable<decimal> value);
    partial void OndonGiaChanged();
    partial void OnthanhTienChanging(System.Nullable<decimal> value);
    partial void OnthanhTienChanged();
    partial void OnngayChanging(System.Nullable<System.DateTime> value);
    partial void OnngayChanged();
    #endregion
		
		public DatPhong_CT()
		{
			this._Phong = default(EntityRef<Phong>);
			this._DatPhong = default(EntityRef<DatPhong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDPCT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDPCT
		{
			get
			{
				return this._idDPCT;
			}
			set
			{
				if ((this._idDPCT != value))
				{
					this.OnidDPCTChanging(value);
					this.SendPropertyChanging();
					this._idDPCT = value;
					this.SendPropertyChanged("idDPCT");
					this.OnidDPCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDP", DbType="Int")]
		public System.Nullable<int> idDP
		{
			get
			{
				return this._idDP;
			}
			set
			{
				if ((this._idDP != value))
				{
					if (this._DatPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDPChanging(value);
					this.SendPropertyChanging();
					this._idDP = value;
					this.SendPropertyChanged("idDP");
					this.OnidDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPhong", DbType="Int")]
		public System.Nullable<int> idPhong
		{
			get
			{
				return this._idPhong;
			}
			set
			{
				if ((this._idPhong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPhongChanging(value);
					this.SendPropertyChanging();
					this._idPhong = value;
					this.SendPropertyChanged("idPhong");
					this.OnidPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soNgayO", DbType="Int")]
		public System.Nullable<int> soNgayO
		{
			get
			{
				return this._soNgayO;
			}
			set
			{
				if ((this._soNgayO != value))
				{
					this.OnsoNgayOChanging(value);
					this.SendPropertyChanging();
					this._soNgayO = value;
					this.SendPropertyChanged("soNgayO");
					this.OnsoNgayOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donGia", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> donGia
		{
			get
			{
				return this._donGia;
			}
			set
			{
				if ((this._donGia != value))
				{
					this.OndonGiaChanging(value);
					this.SendPropertyChanging();
					this._donGia = value;
					this.SendPropertyChanged("donGia");
					this.OndonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thanhTien", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> thanhTien
		{
			get
			{
				return this._thanhTien;
			}
			set
			{
				if ((this._thanhTien != value))
				{
					this.OnthanhTienChanging(value);
					this.SendPropertyChanging();
					this._thanhTien = value;
					this.SendPropertyChanged("thanhTien");
					this.OnthanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay", DbType="Date")]
		public System.Nullable<System.DateTime> ngay
		{
			get
			{
				return this._ngay;
			}
			set
			{
				if ((this._ngay != value))
				{
					this.OnngayChanging(value);
					this.SendPropertyChanging();
					this._ngay = value;
					this.SendPropertyChanged("ngay");
					this.OnngayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_DatPhong_CT", Storage="_Phong", ThisKey="idPhong", OtherKey="idPhong", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.DatPhong_CTs.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.DatPhong_CTs.Add(this);
						this._idPhong = value.idPhong;
					}
					else
					{
						this._idPhong = default(Nullable<int>);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_DatPhong_CT", Storage="_DatPhong", ThisKey="idDP", OtherKey="idDP", IsForeignKey=true)]
		public DatPhong DatPhong
		{
			get
			{
				return this._DatPhong.Entity;
			}
			set
			{
				DatPhong previousValue = this._DatPhong.Entity;
				if (((previousValue != value) 
							|| (this._DatPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatPhong.Entity = null;
						previousValue.DatPhong_CTs.Remove(this);
					}
					this._DatPhong.Entity = value;
					if ((value != null))
					{
						value.DatPhong_CTs.Add(this);
						this._idDP = value.idDP;
					}
					else
					{
						this._idDP = default(Nullable<int>);
					}
					this.SendPropertyChanged("DatPhong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phong")]
	public partial class Phong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPhong;
		
		private string _tenPhong;
		
		private System.Nullable<bool> _trangThai;
		
		private System.Nullable<int> _idTang;
		
		private System.Nullable<int> _idLoaiPhong;
		
		private System.Nullable<bool> _disable;
		
		private EntitySet<DatPhong_CT> _DatPhong_CTs;
		
		private EntitySet<Phong_TB> _Phong_TBs;
		
		private EntityRef<LoaiPhong> _LoaiPhong;
		
		private EntityRef<Tang> _Tang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPhongChanging(int value);
    partial void OnidPhongChanged();
    partial void OntenPhongChanging(string value);
    partial void OntenPhongChanged();
    partial void OntrangThaiChanging(System.Nullable<bool> value);
    partial void OntrangThaiChanged();
    partial void OnidTangChanging(System.Nullable<int> value);
    partial void OnidTangChanged();
    partial void OnidLoaiPhongChanging(System.Nullable<int> value);
    partial void OnidLoaiPhongChanged();
    partial void OndisableChanging(System.Nullable<bool> value);
    partial void OndisableChanged();
    #endregion
		
		public Phong()
		{
			this._DatPhong_CTs = new EntitySet<DatPhong_CT>(new Action<DatPhong_CT>(this.attach_DatPhong_CTs), new Action<DatPhong_CT>(this.detach_DatPhong_CTs));
			this._Phong_TBs = new EntitySet<Phong_TB>(new Action<Phong_TB>(this.attach_Phong_TBs), new Action<Phong_TB>(this.detach_Phong_TBs));
			this._LoaiPhong = default(EntityRef<LoaiPhong>);
			this._Tang = default(EntityRef<Tang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPhong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPhong
		{
			get
			{
				return this._idPhong;
			}
			set
			{
				if ((this._idPhong != value))
				{
					this.OnidPhongChanging(value);
					this.SendPropertyChanging();
					this._idPhong = value;
					this.SendPropertyChanged("idPhong");
					this.OnidPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenPhong", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string tenPhong
		{
			get
			{
				return this._tenPhong;
			}
			set
			{
				if ((this._tenPhong != value))
				{
					this.OntenPhongChanging(value);
					this.SendPropertyChanging();
					this._tenPhong = value;
					this.SendPropertyChanged("tenPhong");
					this.OntenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangThai", DbType="Bit")]
		public System.Nullable<bool> trangThai
		{
			get
			{
				return this._trangThai;
			}
			set
			{
				if ((this._trangThai != value))
				{
					this.OntrangThaiChanging(value);
					this.SendPropertyChanging();
					this._trangThai = value;
					this.SendPropertyChanged("trangThai");
					this.OntrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTang", DbType="Int")]
		public System.Nullable<int> idTang
		{
			get
			{
				return this._idTang;
			}
			set
			{
				if ((this._idTang != value))
				{
					if (this._Tang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTangChanging(value);
					this.SendPropertyChanging();
					this._idTang = value;
					this.SendPropertyChanged("idTang");
					this.OnidTangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLoaiPhong", DbType="Int")]
		public System.Nullable<int> idLoaiPhong
		{
			get
			{
				return this._idLoaiPhong;
			}
			set
			{
				if ((this._idLoaiPhong != value))
				{
					if (this._LoaiPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidLoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._idLoaiPhong = value;
					this.SendPropertyChanged("idLoaiPhong");
					this.OnidLoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disable", DbType="Bit")]
		public System.Nullable<bool> disable
		{
			get
			{
				return this._disable;
			}
			set
			{
				if ((this._disable != value))
				{
					this.OndisableChanging(value);
					this.SendPropertyChanging();
					this._disable = value;
					this.SendPropertyChanged("disable");
					this.OndisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_DatPhong_CT", Storage="_DatPhong_CTs", ThisKey="idPhong", OtherKey="idPhong")]
		public EntitySet<DatPhong_CT> DatPhong_CTs
		{
			get
			{
				return this._DatPhong_CTs;
			}
			set
			{
				this._DatPhong_CTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_Phong_TB", Storage="_Phong_TBs", ThisKey="idPhong", OtherKey="idPhong")]
		public EntitySet<Phong_TB> Phong_TBs
		{
			get
			{
				return this._Phong_TBs;
			}
			set
			{
				this._Phong_TBs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_Phong", Storage="_LoaiPhong", ThisKey="idLoaiPhong", OtherKey="idLoaiPhong", IsForeignKey=true)]
		public LoaiPhong LoaiPhong
		{
			get
			{
				return this._LoaiPhong.Entity;
			}
			set
			{
				LoaiPhong previousValue = this._LoaiPhong.Entity;
				if (((previousValue != value) 
							|| (this._LoaiPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiPhong.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._LoaiPhong.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._idLoaiPhong = value.idLoaiPhong;
					}
					else
					{
						this._idLoaiPhong = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiPhong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tang_Phong", Storage="_Tang", ThisKey="idTang", OtherKey="idTang", IsForeignKey=true)]
		public Tang Tang
		{
			get
			{
				return this._Tang.Entity;
			}
			set
			{
				Tang previousValue = this._Tang.Entity;
				if (((previousValue != value) 
							|| (this._Tang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tang.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._Tang.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._idTang = value.idTang;
					}
					else
					{
						this._idTang = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatPhong_CTs(DatPhong_CT entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_DatPhong_CTs(DatPhong_CT entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
		
		private void attach_Phong_TBs(Phong_TB entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_Phong_TBs(Phong_TB entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiPhong")]
	public partial class LoaiPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idLoaiPhong;
		
		private string _tenLoaiPhong;
		
		private decimal _donGia;
		
		private System.Nullable<int> _soNguoi;
		
		private System.Nullable<int> _soGiuong;
		
		private System.Nullable<bool> _disable;
		
		private EntitySet<Phong> _Phongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidLoaiPhongChanging(int value);
    partial void OnidLoaiPhongChanged();
    partial void OntenLoaiPhongChanging(string value);
    partial void OntenLoaiPhongChanged();
    partial void OndonGiaChanging(decimal value);
    partial void OndonGiaChanged();
    partial void OnsoNguoiChanging(System.Nullable<int> value);
    partial void OnsoNguoiChanged();
    partial void OnsoGiuongChanging(System.Nullable<int> value);
    partial void OnsoGiuongChanged();
    partial void OndisableChanging(System.Nullable<bool> value);
    partial void OndisableChanged();
    #endregion
		
		public LoaiPhong()
		{
			this._Phongs = new EntitySet<Phong>(new Action<Phong>(this.attach_Phongs), new Action<Phong>(this.detach_Phongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLoaiPhong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idLoaiPhong
		{
			get
			{
				return this._idLoaiPhong;
			}
			set
			{
				if ((this._idLoaiPhong != value))
				{
					this.OnidLoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._idLoaiPhong = value;
					this.SendPropertyChanged("idLoaiPhong");
					this.OnidLoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenLoaiPhong", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string tenLoaiPhong
		{
			get
			{
				return this._tenLoaiPhong;
			}
			set
			{
				if ((this._tenLoaiPhong != value))
				{
					this.OntenLoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._tenLoaiPhong = value;
					this.SendPropertyChanged("tenLoaiPhong");
					this.OntenLoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donGia", DbType="Decimal(10,2) NOT NULL")]
		public decimal donGia
		{
			get
			{
				return this._donGia;
			}
			set
			{
				if ((this._donGia != value))
				{
					this.OndonGiaChanging(value);
					this.SendPropertyChanging();
					this._donGia = value;
					this.SendPropertyChanged("donGia");
					this.OndonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soNguoi", DbType="Int")]
		public System.Nullable<int> soNguoi
		{
			get
			{
				return this._soNguoi;
			}
			set
			{
				if ((this._soNguoi != value))
				{
					this.OnsoNguoiChanging(value);
					this.SendPropertyChanging();
					this._soNguoi = value;
					this.SendPropertyChanged("soNguoi");
					this.OnsoNguoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soGiuong", DbType="Int")]
		public System.Nullable<int> soGiuong
		{
			get
			{
				return this._soGiuong;
			}
			set
			{
				if ((this._soGiuong != value))
				{
					this.OnsoGiuongChanging(value);
					this.SendPropertyChanging();
					this._soGiuong = value;
					this.SendPropertyChanged("soGiuong");
					this.OnsoGiuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disable", DbType="Bit")]
		public System.Nullable<bool> disable
		{
			get
			{
				return this._disable;
			}
			set
			{
				if ((this._disable != value))
				{
					this.OndisableChanging(value);
					this.SendPropertyChanging();
					this._disable = value;
					this.SendPropertyChanged("disable");
					this.OndisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_Phong", Storage="_Phongs", ThisKey="idLoaiPhong", OtherKey="idLoaiPhong")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._Phongs;
			}
			set
			{
				this._Phongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = this;
		}
		
		private void detach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phong_TB")]
	public partial class Phong_TB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPhong;
		
		private int _idTB;
		
		private System.Nullable<int> _soLuong;
		
		private EntityRef<Phong> _Phong;
		
		private EntityRef<ThietBi> _ThietBi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPhongChanging(int value);
    partial void OnidPhongChanged();
    partial void OnidTBChanging(int value);
    partial void OnidTBChanged();
    partial void OnsoLuongChanging(System.Nullable<int> value);
    partial void OnsoLuongChanged();
    #endregion
		
		public Phong_TB()
		{
			this._Phong = default(EntityRef<Phong>);
			this._ThietBi = default(EntityRef<ThietBi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPhong", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idPhong
		{
			get
			{
				return this._idPhong;
			}
			set
			{
				if ((this._idPhong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPhongChanging(value);
					this.SendPropertyChanging();
					this._idPhong = value;
					this.SendPropertyChanged("idPhong");
					this.OnidPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTB", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idTB
		{
			get
			{
				return this._idTB;
			}
			set
			{
				if ((this._idTB != value))
				{
					if (this._ThietBi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTBChanging(value);
					this.SendPropertyChanging();
					this._idTB = value;
					this.SendPropertyChanged("idTB");
					this.OnidTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soLuong", DbType="Int")]
		public System.Nullable<int> soLuong
		{
			get
			{
				return this._soLuong;
			}
			set
			{
				if ((this._soLuong != value))
				{
					this.OnsoLuongChanging(value);
					this.SendPropertyChanging();
					this._soLuong = value;
					this.SendPropertyChanged("soLuong");
					this.OnsoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_Phong_TB", Storage="_Phong", ThisKey="idPhong", OtherKey="idPhong", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.Phong_TBs.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.Phong_TBs.Add(this);
						this._idPhong = value.idPhong;
					}
					else
					{
						this._idPhong = default(int);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThietBi_Phong_TB", Storage="_ThietBi", ThisKey="idTB", OtherKey="idTB", IsForeignKey=true)]
		public ThietBi ThietBi
		{
			get
			{
				return this._ThietBi.Entity;
			}
			set
			{
				ThietBi previousValue = this._ThietBi.Entity;
				if (((previousValue != value) 
							|| (this._ThietBi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThietBi.Entity = null;
						previousValue.Phong_TBs.Remove(this);
					}
					this._ThietBi.Entity = value;
					if ((value != null))
					{
						value.Phong_TBs.Add(this);
						this._idTB = value.idTB;
					}
					else
					{
						this._idTB = default(int);
					}
					this.SendPropertyChanged("ThietBi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThietBi")]
	public partial class ThietBi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTB;
		
		private string _tenTB;
		
		private System.Nullable<decimal> _donGia;
		
		private System.Nullable<bool> _disable;
		
		private EntitySet<Phong_TB> _Phong_TBs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTBChanging(int value);
    partial void OnidTBChanged();
    partial void OntenTBChanging(string value);
    partial void OntenTBChanged();
    partial void OndonGiaChanging(System.Nullable<decimal> value);
    partial void OndonGiaChanged();
    partial void OndisableChanging(System.Nullable<bool> value);
    partial void OndisableChanged();
    #endregion
		
		public ThietBi()
		{
			this._Phong_TBs = new EntitySet<Phong_TB>(new Action<Phong_TB>(this.attach_Phong_TBs), new Action<Phong_TB>(this.detach_Phong_TBs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTB", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTB
		{
			get
			{
				return this._idTB;
			}
			set
			{
				if ((this._idTB != value))
				{
					this.OnidTBChanging(value);
					this.SendPropertyChanging();
					this._idTB = value;
					this.SendPropertyChanged("idTB");
					this.OnidTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenTB", DbType="NVarChar(255)")]
		public string tenTB
		{
			get
			{
				return this._tenTB;
			}
			set
			{
				if ((this._tenTB != value))
				{
					this.OntenTBChanging(value);
					this.SendPropertyChanging();
					this._tenTB = value;
					this.SendPropertyChanged("tenTB");
					this.OntenTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donGia", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> donGia
		{
			get
			{
				return this._donGia;
			}
			set
			{
				if ((this._donGia != value))
				{
					this.OndonGiaChanging(value);
					this.SendPropertyChanging();
					this._donGia = value;
					this.SendPropertyChanged("donGia");
					this.OndonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disable", DbType="Bit")]
		public System.Nullable<bool> disable
		{
			get
			{
				return this._disable;
			}
			set
			{
				if ((this._disable != value))
				{
					this.OndisableChanging(value);
					this.SendPropertyChanging();
					this._disable = value;
					this.SendPropertyChanged("disable");
					this.OndisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThietBi_Phong_TB", Storage="_Phong_TBs", ThisKey="idTB", OtherKey="idTB")]
		public EntitySet<Phong_TB> Phong_TBs
		{
			get
			{
				return this._Phong_TBs;
			}
			set
			{
				this._Phong_TBs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phong_TBs(Phong_TB entity)
		{
			this.SendPropertyChanging();
			entity.ThietBi = this;
		}
		
		private void detach_Phong_TBs(Phong_TB entity)
		{
			this.SendPropertyChanging();
			entity.ThietBi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tang")]
	public partial class Tang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTang;
		
		private string _tenTang;
		
		private System.Nullable<bool> _disable;
		
		private EntitySet<Phong> _Phongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTangChanging(int value);
    partial void OnidTangChanged();
    partial void OntenTangChanging(string value);
    partial void OntenTangChanged();
    partial void OndisableChanging(System.Nullable<bool> value);
    partial void OndisableChanged();
    #endregion
		
		public Tang()
		{
			this._Phongs = new EntitySet<Phong>(new Action<Phong>(this.attach_Phongs), new Action<Phong>(this.detach_Phongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTang
		{
			get
			{
				return this._idTang;
			}
			set
			{
				if ((this._idTang != value))
				{
					this.OnidTangChanging(value);
					this.SendPropertyChanging();
					this._idTang = value;
					this.SendPropertyChanged("idTang");
					this.OnidTangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenTang", DbType="NVarChar(50)")]
		public string tenTang
		{
			get
			{
				return this._tenTang;
			}
			set
			{
				if ((this._tenTang != value))
				{
					this.OntenTangChanging(value);
					this.SendPropertyChanging();
					this._tenTang = value;
					this.SendPropertyChanged("tenTang");
					this.OntenTangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disable", DbType="Bit")]
		public System.Nullable<bool> disable
		{
			get
			{
				return this._disable;
			}
			set
			{
				if ((this._disable != value))
				{
					this.OndisableChanging(value);
					this.SendPropertyChanging();
					this._disable = value;
					this.SendPropertyChanged("disable");
					this.OndisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tang_Phong", Storage="_Phongs", ThisKey="idTang", OtherKey="idTang")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._Phongs;
			}
			set
			{
				this._Phongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.Tang = this;
		}
		
		private void detach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.Tang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _uid;
		
		private string _fullName;
		
		private string _userName;
		
		private string _passWord;
		
		private System.Nullable<System.DateTime> _last_pwd_change;
		
		private System.Nullable<bool> _isGroup;
		
		private System.Nullable<bool> _disable;
		
		private EntitySet<Right> _Rights;
		
		private EntitySet<DatPhong> _DatPhongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuidChanging(int value);
    partial void OnuidChanged();
    partial void OnfullNameChanging(string value);
    partial void OnfullNameChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnpassWordChanging(string value);
    partial void OnpassWordChanged();
    partial void Onlast_pwd_changeChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_pwd_changeChanged();
    partial void OnisGroupChanging(System.Nullable<bool> value);
    partial void OnisGroupChanged();
    partial void OndisableChanging(System.Nullable<bool> value);
    partial void OndisableChanged();
    #endregion
		
		public User()
		{
			this._Rights = new EntitySet<Right>(new Action<Right>(this.attach_Rights), new Action<Right>(this.detach_Rights));
			this._DatPhongs = new EntitySet<DatPhong>(new Action<DatPhong>(this.attach_DatPhongs), new Action<DatPhong>(this.detach_DatPhongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullName", DbType="NVarChar(255)")]
		public string fullName
		{
			get
			{
				return this._fullName;
			}
			set
			{
				if ((this._fullName != value))
				{
					this.OnfullNameChanging(value);
					this.SendPropertyChanging();
					this._fullName = value;
					this.SendPropertyChanged("fullName");
					this.OnfullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(255)")]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passWord", DbType="NVarChar(255)")]
		public string passWord
		{
			get
			{
				return this._passWord;
			}
			set
			{
				if ((this._passWord != value))
				{
					this.OnpassWordChanging(value);
					this.SendPropertyChanging();
					this._passWord = value;
					this.SendPropertyChanged("passWord");
					this.OnpassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_pwd_change", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_pwd_change
		{
			get
			{
				return this._last_pwd_change;
			}
			set
			{
				if ((this._last_pwd_change != value))
				{
					this.Onlast_pwd_changeChanging(value);
					this.SendPropertyChanging();
					this._last_pwd_change = value;
					this.SendPropertyChanged("last_pwd_change");
					this.Onlast_pwd_changeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isGroup", DbType="Bit")]
		public System.Nullable<bool> isGroup
		{
			get
			{
				return this._isGroup;
			}
			set
			{
				if ((this._isGroup != value))
				{
					this.OnisGroupChanging(value);
					this.SendPropertyChanging();
					this._isGroup = value;
					this.SendPropertyChanged("isGroup");
					this.OnisGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disable", DbType="Bit")]
		public System.Nullable<bool> disable
		{
			get
			{
				return this._disable;
			}
			set
			{
				if ((this._disable != value))
				{
					this.OndisableChanging(value);
					this.SendPropertyChanging();
					this._disable = value;
					this.SendPropertyChanged("disable");
					this.OndisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Right", Storage="_Rights", ThisKey="uid", OtherKey="idUser")]
		public EntitySet<Right> Rights
		{
			get
			{
				return this._Rights;
			}
			set
			{
				this._Rights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DatPhong", Storage="_DatPhongs", ThisKey="uid", OtherKey="idUser")]
		public EntitySet<DatPhong> DatPhongs
		{
			get
			{
				return this._DatPhongs;
			}
			set
			{
				this._DatPhongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rights(Right entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Rights(Right entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_DatPhongs(DatPhong entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_DatPhongs(DatPhong entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rights")]
	public partial class Right : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _fund_code;
		
		private int _idUser;
		
		private string _userRight;
		
		private EntityRef<User> _User;
		
		private EntityRef<Func> _Func;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfund_codeChanging(string value);
    partial void Onfund_codeChanged();
    partial void OnidUserChanging(int value);
    partial void OnidUserChanged();
    partial void OnuserRightChanging(string value);
    partial void OnuserRightChanged();
    #endregion
		
		public Right()
		{
			this._User = default(EntityRef<User>);
			this._Func = default(EntityRef<Func>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fund_code", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string fund_code
		{
			get
			{
				return this._fund_code;
			}
			set
			{
				if ((this._fund_code != value))
				{
					if (this._Func.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfund_codeChanging(value);
					this.SendPropertyChanging();
					this._fund_code = value;
					this.SendPropertyChanged("fund_code");
					this.Onfund_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userRight", DbType="NVarChar(50)")]
		public string userRight
		{
			get
			{
				return this._userRight;
			}
			set
			{
				if ((this._userRight != value))
				{
					this.OnuserRightChanging(value);
					this.SendPropertyChanging();
					this._userRight = value;
					this.SendPropertyChanged("userRight");
					this.OnuserRightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Right", Storage="_User", ThisKey="idUser", OtherKey="uid", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Rights.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Rights.Add(this);
						this._idUser = value.uid;
					}
					else
					{
						this._idUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Func_Right", Storage="_Func", ThisKey="fund_code", OtherKey="fund_code", IsForeignKey=true)]
		public Func Func
		{
			get
			{
				return this._Func.Entity;
			}
			set
			{
				Func previousValue = this._Func.Entity;
				if (((previousValue != value) 
							|| (this._Func.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Func.Entity = null;
						previousValue.Rights.Remove(this);
					}
					this._Func.Entity = value;
					if ((value != null))
					{
						value.Rights.Add(this);
						this._fund_code = value.fund_code;
					}
					else
					{
						this._fund_code = default(string);
					}
					this.SendPropertyChanged("Func");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idSP;
		
		private string _tenSP;
		
		private System.Nullable<decimal> _donGia;
		
		private System.Nullable<bool> _disable;
		
		private EntitySet<DatPhong_SP> _DatPhong_SPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidSPChanging(int value);
    partial void OnidSPChanged();
    partial void OntenSPChanging(string value);
    partial void OntenSPChanged();
    partial void OndonGiaChanging(System.Nullable<decimal> value);
    partial void OndonGiaChanged();
    partial void OndisableChanging(System.Nullable<bool> value);
    partial void OndisableChanged();
    #endregion
		
		public SanPham()
		{
			this._DatPhong_SPs = new EntitySet<DatPhong_SP>(new Action<DatPhong_SP>(this.attach_DatPhong_SPs), new Action<DatPhong_SP>(this.detach_DatPhong_SPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idSP
		{
			get
			{
				return this._idSP;
			}
			set
			{
				if ((this._idSP != value))
				{
					this.OnidSPChanging(value);
					this.SendPropertyChanging();
					this._idSP = value;
					this.SendPropertyChanged("idSP");
					this.OnidSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenSP", DbType="NVarChar(255)")]
		public string tenSP
		{
			get
			{
				return this._tenSP;
			}
			set
			{
				if ((this._tenSP != value))
				{
					this.OntenSPChanging(value);
					this.SendPropertyChanging();
					this._tenSP = value;
					this.SendPropertyChanged("tenSP");
					this.OntenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donGia", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> donGia
		{
			get
			{
				return this._donGia;
			}
			set
			{
				if ((this._donGia != value))
				{
					this.OndonGiaChanging(value);
					this.SendPropertyChanging();
					this._donGia = value;
					this.SendPropertyChanged("donGia");
					this.OndonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disable", DbType="Bit")]
		public System.Nullable<bool> disable
		{
			get
			{
				return this._disable;
			}
			set
			{
				if ((this._disable != value))
				{
					this.OndisableChanging(value);
					this.SendPropertyChanging();
					this._disable = value;
					this.SendPropertyChanged("disable");
					this.OndisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_DatPhong_SP", Storage="_DatPhong_SPs", ThisKey="idSP", OtherKey="idSP")]
		public EntitySet<DatPhong_SP> DatPhong_SPs
		{
			get
			{
				return this._DatPhong_SPs;
			}
			set
			{
				this._DatPhong_SPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatPhong_SPs(DatPhong_SP entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_DatPhong_SPs(DatPhong_SP entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Func")]
	public partial class Func : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _fund_code;
		
		private string _description;
		
		private string _tips;
		
		private EntitySet<Right> _Rights;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfund_codeChanging(string value);
    partial void Onfund_codeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OntipsChanging(string value);
    partial void OntipsChanged();
    #endregion
		
		public Func()
		{
			this._Rights = new EntitySet<Right>(new Action<Right>(this.attach_Rights), new Action<Right>(this.detach_Rights));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fund_code", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string fund_code
		{
			get
			{
				return this._fund_code;
			}
			set
			{
				if ((this._fund_code != value))
				{
					this.Onfund_codeChanging(value);
					this.SendPropertyChanging();
					this._fund_code = value;
					this.SendPropertyChanged("fund_code");
					this.Onfund_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tips", DbType="NVarChar(255)")]
		public string tips
		{
			get
			{
				return this._tips;
			}
			set
			{
				if ((this._tips != value))
				{
					this.OntipsChanging(value);
					this.SendPropertyChanging();
					this._tips = value;
					this.SendPropertyChanged("tips");
					this.OntipsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Func_Right", Storage="_Rights", ThisKey="fund_code", OtherKey="fund_code")]
		public EntitySet<Right> Rights
		{
			get
			{
				return this._Rights;
			}
			set
			{
				this._Rights.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rights(Right entity)
		{
			this.SendPropertyChanging();
			entity.Func = this;
		}
		
		private void detach_Rights(Right entity)
		{
			this.SendPropertyChanging();
			entity.Func = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idKH;
		
		private string _hoTen;
		
		private System.Nullable<bool> _gioiTinh;
		
		private string _cccd;
		
		private string _dienThoai;
		
		private string _email;
		
		private string _diaChi;
		
		private System.Nullable<bool> _disable;
		
		private EntitySet<DatPhong> _DatPhongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidKHChanging(int value);
    partial void OnidKHChanged();
    partial void OnhoTenChanging(string value);
    partial void OnhoTenChanged();
    partial void OngioiTinhChanging(System.Nullable<bool> value);
    partial void OngioiTinhChanged();
    partial void OncccdChanging(string value);
    partial void OncccdChanged();
    partial void OndienThoaiChanging(string value);
    partial void OndienThoaiChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OndiaChiChanging(string value);
    partial void OndiaChiChanged();
    partial void OndisableChanging(System.Nullable<bool> value);
    partial void OndisableChanged();
    #endregion
		
		public KhachHang()
		{
			this._DatPhongs = new EntitySet<DatPhong>(new Action<DatPhong>(this.attach_DatPhongs), new Action<DatPhong>(this.detach_DatPhongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idKH
		{
			get
			{
				return this._idKH;
			}
			set
			{
				if ((this._idKH != value))
				{
					this.OnidKHChanging(value);
					this.SendPropertyChanging();
					this._idKH = value;
					this.SendPropertyChanged("idKH");
					this.OnidKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoTen", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string hoTen
		{
			get
			{
				return this._hoTen;
			}
			set
			{
				if ((this._hoTen != value))
				{
					this.OnhoTenChanging(value);
					this.SendPropertyChanging();
					this._hoTen = value;
					this.SendPropertyChanged("hoTen");
					this.OnhoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioiTinh", DbType="Bit")]
		public System.Nullable<bool> gioiTinh
		{
			get
			{
				return this._gioiTinh;
			}
			set
			{
				if ((this._gioiTinh != value))
				{
					this.OngioiTinhChanging(value);
					this.SendPropertyChanging();
					this._gioiTinh = value;
					this.SendPropertyChanged("gioiTinh");
					this.OngioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cccd", DbType="NVarChar(50)")]
		public string cccd
		{
			get
			{
				return this._cccd;
			}
			set
			{
				if ((this._cccd != value))
				{
					this.OncccdChanging(value);
					this.SendPropertyChanging();
					this._cccd = value;
					this.SendPropertyChanged("cccd");
					this.OncccdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dienThoai", DbType="NVarChar(20)")]
		public string dienThoai
		{
			get
			{
				return this._dienThoai;
			}
			set
			{
				if ((this._dienThoai != value))
				{
					this.OndienThoaiChanging(value);
					this.SendPropertyChanging();
					this._dienThoai = value;
					this.SendPropertyChanged("dienThoai");
					this.OndienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChi", DbType="NVarChar(255)")]
		public string diaChi
		{
			get
			{
				return this._diaChi;
			}
			set
			{
				if ((this._diaChi != value))
				{
					this.OndiaChiChanging(value);
					this.SendPropertyChanging();
					this._diaChi = value;
					this.SendPropertyChanged("diaChi");
					this.OndiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disable", DbType="Bit")]
		public System.Nullable<bool> disable
		{
			get
			{
				return this._disable;
			}
			set
			{
				if ((this._disable != value))
				{
					this.OndisableChanging(value);
					this.SendPropertyChanging();
					this._disable = value;
					this.SendPropertyChanged("disable");
					this.OndisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DatPhong", Storage="_DatPhongs", ThisKey="idKH", OtherKey="idKH")]
		public EntitySet<DatPhong> DatPhongs
		{
			get
			{
				return this._DatPhongs;
			}
			set
			{
				this._DatPhongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatPhongs(DatPhong entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DatPhongs(DatPhong entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatPhong")]
	public partial class DatPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDP;
		
		private System.Nullable<int> _idKH;
		
		private System.Nullable<System.DateTime> _ngayDat;
		
		private System.Nullable<System.DateTime> _ngayTra;
		
		private System.Nullable<decimal> _soTien;
		
		private System.Nullable<int> _soNguoiO;
		
		private System.Nullable<int> _idUser;
		
		private System.Nullable<bool> _status;
		
		private System.Nullable<bool> _disable;
		
		private System.Nullable<bool> _theoDoan;
		
		private string _ghiChu;
		
		private System.Nullable<System.DateTime> _create_date;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private System.Nullable<int> _update_by;
		
		private EntitySet<DatPhong_CT> _DatPhong_CTs;
		
		private EntitySet<DatPhong_SP> _DatPhong_SPs;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDPChanging(int value);
    partial void OnidDPChanged();
    partial void OnidKHChanging(System.Nullable<int> value);
    partial void OnidKHChanged();
    partial void OnngayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnngayDatChanged();
    partial void OnngayTraChanging(System.Nullable<System.DateTime> value);
    partial void OnngayTraChanged();
    partial void OnsoTienChanging(System.Nullable<decimal> value);
    partial void OnsoTienChanged();
    partial void OnsoNguoiOChanging(System.Nullable<int> value);
    partial void OnsoNguoiOChanged();
    partial void OnidUserChanging(System.Nullable<int> value);
    partial void OnidUserChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    partial void OndisableChanging(System.Nullable<bool> value);
    partial void OndisableChanged();
    partial void OntheoDoanChanging(System.Nullable<bool> value);
    partial void OntheoDoanChanged();
    partial void OnghiChuChanging(string value);
    partial void OnghiChuChanged();
    partial void Oncreate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_dateChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onupdate_byChanging(System.Nullable<int> value);
    partial void Onupdate_byChanged();
    #endregion
		
		public DatPhong()
		{
			this._DatPhong_CTs = new EntitySet<DatPhong_CT>(new Action<DatPhong_CT>(this.attach_DatPhong_CTs), new Action<DatPhong_CT>(this.detach_DatPhong_CTs));
			this._DatPhong_SPs = new EntitySet<DatPhong_SP>(new Action<DatPhong_SP>(this.attach_DatPhong_SPs), new Action<DatPhong_SP>(this.detach_DatPhong_SPs));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDP
		{
			get
			{
				return this._idDP;
			}
			set
			{
				if ((this._idDP != value))
				{
					this.OnidDPChanging(value);
					this.SendPropertyChanging();
					this._idDP = value;
					this.SendPropertyChanged("idDP");
					this.OnidDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idKH", DbType="Int")]
		public System.Nullable<int> idKH
		{
			get
			{
				return this._idKH;
			}
			set
			{
				if ((this._idKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidKHChanging(value);
					this.SendPropertyChanging();
					this._idKH = value;
					this.SendPropertyChanged("idKH");
					this.OnidKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayDat", DbType="Date")]
		public System.Nullable<System.DateTime> ngayDat
		{
			get
			{
				return this._ngayDat;
			}
			set
			{
				if ((this._ngayDat != value))
				{
					this.OnngayDatChanging(value);
					this.SendPropertyChanging();
					this._ngayDat = value;
					this.SendPropertyChanged("ngayDat");
					this.OnngayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayTra", DbType="Date")]
		public System.Nullable<System.DateTime> ngayTra
		{
			get
			{
				return this._ngayTra;
			}
			set
			{
				if ((this._ngayTra != value))
				{
					this.OnngayTraChanging(value);
					this.SendPropertyChanging();
					this._ngayTra = value;
					this.SendPropertyChanged("ngayTra");
					this.OnngayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soTien", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> soTien
		{
			get
			{
				return this._soTien;
			}
			set
			{
				if ((this._soTien != value))
				{
					this.OnsoTienChanging(value);
					this.SendPropertyChanging();
					this._soTien = value;
					this.SendPropertyChanged("soTien");
					this.OnsoTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soNguoiO", DbType="Int")]
		public System.Nullable<int> soNguoiO
		{
			get
			{
				return this._soNguoiO;
			}
			set
			{
				if ((this._soNguoiO != value))
				{
					this.OnsoNguoiOChanging(value);
					this.SendPropertyChanging();
					this._soNguoiO = value;
					this.SendPropertyChanged("soNguoiO");
					this.OnsoNguoiOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int")]
		public System.Nullable<int> idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disable", DbType="Bit")]
		public System.Nullable<bool> disable
		{
			get
			{
				return this._disable;
			}
			set
			{
				if ((this._disable != value))
				{
					this.OndisableChanging(value);
					this.SendPropertyChanging();
					this._disable = value;
					this.SendPropertyChanged("disable");
					this.OndisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_theoDoan", DbType="Bit")]
		public System.Nullable<bool> theoDoan
		{
			get
			{
				return this._theoDoan;
			}
			set
			{
				if ((this._theoDoan != value))
				{
					this.OntheoDoanChanging(value);
					this.SendPropertyChanging();
					this._theoDoan = value;
					this.SendPropertyChanged("theoDoan");
					this.OntheoDoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ghiChu", DbType="NVarChar(50)")]
		public string ghiChu
		{
			get
			{
				return this._ghiChu;
			}
			set
			{
				if ((this._ghiChu != value))
				{
					this.OnghiChuChanging(value);
					this.SendPropertyChanging();
					this._ghiChu = value;
					this.SendPropertyChanged("ghiChu");
					this.OnghiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_by", DbType="Int")]
		public System.Nullable<int> update_by
		{
			get
			{
				return this._update_by;
			}
			set
			{
				if ((this._update_by != value))
				{
					this.Onupdate_byChanging(value);
					this.SendPropertyChanging();
					this._update_by = value;
					this.SendPropertyChanged("update_by");
					this.Onupdate_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_DatPhong_CT", Storage="_DatPhong_CTs", ThisKey="idDP", OtherKey="idDP")]
		public EntitySet<DatPhong_CT> DatPhong_CTs
		{
			get
			{
				return this._DatPhong_CTs;
			}
			set
			{
				this._DatPhong_CTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_DatPhong_SP", Storage="_DatPhong_SPs", ThisKey="idDP", OtherKey="idDP")]
		public EntitySet<DatPhong_SP> DatPhong_SPs
		{
			get
			{
				return this._DatPhong_SPs;
			}
			set
			{
				this._DatPhong_SPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DatPhong", Storage="_KhachHang", ThisKey="idKH", OtherKey="idKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DatPhongs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DatPhongs.Add(this);
						this._idKH = value.idKH;
					}
					else
					{
						this._idKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DatPhong", Storage="_User", ThisKey="idUser", OtherKey="uid", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.DatPhongs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.DatPhongs.Add(this);
						this._idUser = value.uid;
					}
					else
					{
						this._idUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatPhong_CTs(DatPhong_CT entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = this;
		}
		
		private void detach_DatPhong_CTs(DatPhong_CT entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = null;
		}
		
		private void attach_DatPhong_SPs(DatPhong_SP entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = this;
		}
		
		private void detach_DatPhong_SPs(DatPhong_SP entity)
		{
			this.SendPropertyChanging();
			entity.DatPhong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatPhong_SP")]
	public partial class DatPhong_SP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDPSP;
		
		private System.Nullable<int> _idDP;
		
		private System.Nullable<int> _idSP;
		
		private System.Nullable<int> _idPhong;
		
		private System.Nullable<int> _soLuong;
		
		private System.Nullable<decimal> _donGia;
		
		private System.Nullable<decimal> _thanhTien;
		
		private System.Nullable<System.DateTime> _ngay;
		
		private EntityRef<DatPhong> _DatPhong;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDPSPChanging(int value);
    partial void OnidDPSPChanged();
    partial void OnidDPChanging(System.Nullable<int> value);
    partial void OnidDPChanged();
    partial void OnidSPChanging(System.Nullable<int> value);
    partial void OnidSPChanged();
    partial void OnidPhongChanging(System.Nullable<int> value);
    partial void OnidPhongChanged();
    partial void OnsoLuongChanging(System.Nullable<int> value);
    partial void OnsoLuongChanged();
    partial void OndonGiaChanging(System.Nullable<decimal> value);
    partial void OndonGiaChanged();
    partial void OnthanhTienChanging(System.Nullable<decimal> value);
    partial void OnthanhTienChanged();
    partial void OnngayChanging(System.Nullable<System.DateTime> value);
    partial void OnngayChanged();
    #endregion
		
		public DatPhong_SP()
		{
			this._DatPhong = default(EntityRef<DatPhong>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDPSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDPSP
		{
			get
			{
				return this._idDPSP;
			}
			set
			{
				if ((this._idDPSP != value))
				{
					this.OnidDPSPChanging(value);
					this.SendPropertyChanging();
					this._idDPSP = value;
					this.SendPropertyChanged("idDPSP");
					this.OnidDPSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDP", DbType="Int")]
		public System.Nullable<int> idDP
		{
			get
			{
				return this._idDP;
			}
			set
			{
				if ((this._idDP != value))
				{
					if (this._DatPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDPChanging(value);
					this.SendPropertyChanging();
					this._idDP = value;
					this.SendPropertyChanged("idDP");
					this.OnidDPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSP", DbType="Int")]
		public System.Nullable<int> idSP
		{
			get
			{
				return this._idSP;
			}
			set
			{
				if ((this._idSP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSPChanging(value);
					this.SendPropertyChanging();
					this._idSP = value;
					this.SendPropertyChanged("idSP");
					this.OnidSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPhong", DbType="Int")]
		public System.Nullable<int> idPhong
		{
			get
			{
				return this._idPhong;
			}
			set
			{
				if ((this._idPhong != value))
				{
					this.OnidPhongChanging(value);
					this.SendPropertyChanging();
					this._idPhong = value;
					this.SendPropertyChanged("idPhong");
					this.OnidPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soLuong", DbType="Int")]
		public System.Nullable<int> soLuong
		{
			get
			{
				return this._soLuong;
			}
			set
			{
				if ((this._soLuong != value))
				{
					this.OnsoLuongChanging(value);
					this.SendPropertyChanging();
					this._soLuong = value;
					this.SendPropertyChanged("soLuong");
					this.OnsoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donGia", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> donGia
		{
			get
			{
				return this._donGia;
			}
			set
			{
				if ((this._donGia != value))
				{
					this.OndonGiaChanging(value);
					this.SendPropertyChanging();
					this._donGia = value;
					this.SendPropertyChanged("donGia");
					this.OndonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thanhTien", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> thanhTien
		{
			get
			{
				return this._thanhTien;
			}
			set
			{
				if ((this._thanhTien != value))
				{
					this.OnthanhTienChanging(value);
					this.SendPropertyChanging();
					this._thanhTien = value;
					this.SendPropertyChanged("thanhTien");
					this.OnthanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay", DbType="Date")]
		public System.Nullable<System.DateTime> ngay
		{
			get
			{
				return this._ngay;
			}
			set
			{
				if ((this._ngay != value))
				{
					this.OnngayChanging(value);
					this.SendPropertyChanging();
					this._ngay = value;
					this.SendPropertyChanged("ngay");
					this.OnngayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DatPhong_DatPhong_SP", Storage="_DatPhong", ThisKey="idDP", OtherKey="idDP", IsForeignKey=true)]
		public DatPhong DatPhong
		{
			get
			{
				return this._DatPhong.Entity;
			}
			set
			{
				DatPhong previousValue = this._DatPhong.Entity;
				if (((previousValue != value) 
							|| (this._DatPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatPhong.Entity = null;
						previousValue.DatPhong_SPs.Remove(this);
					}
					this._DatPhong.Entity = value;
					if ((value != null))
					{
						value.DatPhong_SPs.Add(this);
						this._idDP = value.idDP;
					}
					else
					{
						this._idDP = default(Nullable<int>);
					}
					this.SendPropertyChanged("DatPhong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_DatPhong_SP", Storage="_SanPham", ThisKey="idSP", OtherKey="idSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.DatPhong_SPs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.DatPhong_SPs.Add(this);
						this._idSP = value.idSP;
					}
					else
					{
						this._idSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
